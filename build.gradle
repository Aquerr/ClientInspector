buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

plugins {
    id 'java'
    id 'idea'
//    id 'com.github.johnrengelman.shadow' version '2.0.0'
}

apply plugin: 'net.minecraftforge.gradle'

group 'io.github.aquerr.clientinspector'
version '1.1.0-SNAPSHOT'
description = 'A plugin that inspects connecting players data and executes specified commands on them'

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    implementation 'com.typesafe:config:1.4.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    if(System.getenv("JENKINS_HOME")) {
        version = version + "_" + System.getenv("BUILD_NUMBER")
        println("File name => " + baseName)
    }

    manifest {
        attributes([
                "Specification-Title": "clientinspector",
                "Specification-Vendor": "clientinspector",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"clientinspector",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

}

jar.finalizedBy('reobfJar')

minecraft {
    mappings channel: 'snapshot', version: '20180814-1.12'

    runs {
        client {
            workingDirectory project.file('run-client')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                clientinspector {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run-server')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                clientinspector {
                    source sourceSets.main
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.create("publishBuildOnDiscord") {
    group = "Publishing"
    description = "Task for publishing the jar file to discord's jenkins channel"
    doLast {
        String[] jarFiles = new FileNameFinder().getFileNames(project.buildDir.getPath(), "**/*.jar")

        if(jarFiles.length > 0) {
            println("Found jar files: " + jarFiles)

            String lastCommitDescription = "git log -1 --pretty=%B".execute().getText()
            if(lastCommitDescription == null || lastCommitDescription == "") {
                lastCommitDescription = "No changelog provided"
            }

            exec {
                commandLine("java", "-jar", "..\\jenkinsdiscordbot-1.0.jar", "ClientInspector", jarFiles[0], lastCommitDescription)
            }
        }
    }
}
