buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.spongepowered.plugin' version '0.9.0'
//    id 'com.github.johnrengelman.shadow' version '2.0.0'
}

apply plugin: 'net.minecraftforge.gradle.forge'

group 'io.github.aquerr.clientinspector'
version '1.0.0-SNAPSHOT'
description = 'A plugin that inspects connecting players data and executes specified commands on them'

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly 'org.spongepowered:spongeapi:7.3.0'

    annotationProcessor 'org.spongepowered:spongeapi:7.3.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    if(System.getenv("JENKINS_HOME")) {
        version = version + "_" + System.getenv("BUILD_NUMBER")
        println("File name => " + baseName)
    }
}

jar.finalizedBy('reobfJar')

minecraft {
    forgeVersion = '1.12.2-14.23.5.2838'
    mappings = 'stable_39'
}

test {
    useJUnitPlatform()
}

tasks.create("publishBuildOnDiscord") {
    group = "Publishing"
    description = "Task for publishing the jar file to discord's jenkins channel"
    doLast {
        String[] jarFiles = new FileNameFinder().getFileNames(project.buildDir.getPath(), "**/*.jar")

        if(jarFiles.length > 0) {
            println("Found jar files: " + jarFiles)

            String lastCommitDescription = "git log -1 --pretty=%B".execute().getText()
            if(lastCommitDescription == null || lastCommitDescription == "") {
                lastCommitDescription = "No changelog provided"
            }

            exec {
                commandLine("java", "-jar", "..\\jenkinsdiscordbot-1.0.jar", "ClientInspector", jarFiles[0], lastCommitDescription)
            }
        }
    }
}